bootJar.enabled = true
jar.enabled = false

dependencies {
    implementation project(":support:monitoring")
    implementation project(":support:logging")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // validation
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Database
    runtimeOnly 'com.h2database:h2'

    // QueryDSL (Spring Boot 3.x 이상, Jakarta EE)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // Spring Cloud AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Test
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generated = layout.buildDirectory.dir("generated/querydsl")

sourceSets {
    main {
        java {
            srcDirs += generated.get().asFile
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
            '--add-modules', 'java.compiler',
            '-Aquerydsl.generatedAnnotationClass=none'
    ]
}

clean {
    delete generated
}